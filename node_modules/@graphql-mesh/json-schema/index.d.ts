import { GetMeshSourceOptions, MeshHandler, MeshPubSub, YamlConfig } from '@graphql-mesh/types';
import { KeyValueCache } from 'fetchache';
import { SchemaComposer } from 'graphql-compose';
export default class JsonSchemaHandler implements MeshHandler {
    config: YamlConfig.JsonSchemaHandler;
    cache: KeyValueCache<any>;
    pubsub: MeshPubSub;
    constructor({ config, cache, pubsub }: GetMeshSourceOptions<YamlConfig.JsonSchemaHandler>);
    schemaComposer: SchemaComposer<unknown>;
    getMeshSource(): Promise<{
        schema: import("graphql").GraphQLSchema;
        contextVariables: string[];
    }>;
    private isGeneratedJSONSchemaValid;
    private getValidCachedJSONSchema;
    private generateJsonSchemaFromSample;
}
