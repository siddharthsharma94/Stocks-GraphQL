{"version":3,"file":"index.esm.js","sources":["../../../dist/handlers/json-schema/src/json-schema-visitor.js","../../../dist/handlers/json-schema/src/index.js"],"sourcesContent":["import { pascalCase } from 'pascal-case';\nimport { join, isAbsolute, dirname } from 'path';\nimport { readJSONSync } from 'fs-extra';\nimport { camelCase, flatten, get } from 'lodash';\nimport { RegularExpression } from 'graphql-scalars';\nimport Ajv from 'ajv';\nconst asArray = (maybeArray) => {\n    if (Array.isArray(maybeArray)) {\n        return maybeArray;\n    }\n    else if (maybeArray) {\n        return [maybeArray];\n    }\n    else {\n        return [];\n    }\n};\nconst invalidSeperators = [':', '>', '<', '.'];\nconst VALID_FIELD_NAME = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\nexport const getFileName = (filePath) => {\n    const arr = filePath.split('/').map(part => part.split('\\\\'));\n    return flatten(arr).pop().split('.').join('_');\n};\nexport class JSONSchemaVisitor {\n    constructor(schemaComposer, isInput, externalFileCache = new Map(), disableTimestamp = false) {\n        this.schemaComposer = schemaComposer;\n        this.isInput = isInput;\n        this.externalFileCache = externalFileCache;\n        this.disableTimestamp = disableTimestamp;\n        // TODO: Should be improved!\n        this.visitedRefNameMap = new Map();\n        this.namedVisitedDefs = new Set();\n        this.ajv = new Ajv({\n            schemaId: 'auto',\n            missingRefs: 'ignore',\n            logger: false,\n        });\n        // Settings for draft-04\n        const metaSchema = require('ajv/lib/refs/json-schema-draft-04.json');\n        this.ajv.addMetaSchema(metaSchema);\n        this.cache = new Map();\n    }\n    createName({ ref, cwd }) {\n        if (this.visitedRefNameMap.has(ref)) {\n            return this.visitedRefNameMap.get(ref);\n        }\n        let [externalPath, internalRef] = ref.split('#');\n        // If a reference\n        if (internalRef) {\n            const cwdDir = dirname(cwd);\n            const absolutePath = externalPath ? (isAbsolute(externalPath) ? externalPath : join(cwdDir, externalPath)) : cwd;\n            const fileName = getFileName(absolutePath);\n            if (!this.externalFileCache.has(absolutePath)) {\n                const externalSchema = readJSONSync(absolutePath);\n                this.externalFileCache.set(absolutePath, externalSchema);\n                this.visit({\n                    def: externalSchema,\n                    propertyName: this.isInput ? 'Request' : 'Response',\n                    prefix: fileName,\n                    cwd: absolutePath,\n                    ignoreResult: true,\n                });\n            }\n            const internalRefArr = internalRef.split('/').filter(Boolean);\n            const internalPath = internalRefArr.join('.');\n            const internalPropertyName = internalRefArr[internalRefArr.length - 1];\n            const internalDef = get(this.externalFileCache.get(absolutePath), internalPath);\n            const result = this.visit({\n                def: internalDef,\n                propertyName: internalPropertyName,\n                prefix: fileName,\n                cwd: absolutePath,\n                typeName: internalRef.includes('definitions/') && internalPropertyName,\n            });\n            this.visitedRefNameMap.set(ref, result);\n            return result;\n        }\n        else {\n            internalRef = ref;\n        }\n        internalRef = internalRef.split('/').pop();\n        for (const sep of invalidSeperators) {\n            internalRef = internalRef.split(sep).join('_');\n        }\n        let name = pascalCase(internalRef);\n        if (this.schemaComposer.has(name)) {\n            const fileNamePrefix = getFileName(cwd).split('.').join('_');\n            return pascalCase(fileNamePrefix + '_' + name);\n        }\n        if (/^[0-9]/.test(name) || name === '') {\n            name = '_' + name;\n        }\n        this.visitedRefNameMap.set(ref, name);\n        return name;\n    }\n    visit({ def, propertyName, prefix, cwd, ignoreResult, typeName, }) {\n        if (typeName) {\n            if (typeName === 'Subscription') {\n                typeName = prefix + 'Subscription';\n            }\n            if (this.namedVisitedDefs.has(typeName)) {\n                return typeName;\n            }\n            this.namedVisitedDefs.add(typeName);\n        }\n        def.type = Array.isArray(def.type) ? def.type[0] : def.type;\n        const summary = JSON.stringify(def);\n        if (this.cache.has(summary)) {\n            return this.cache.get(summary);\n        }\n        if ('definitions' in def) {\n            for (const propertyName in def.definitions) {\n                const definition = def.definitions[propertyName];\n                this.visit({ def: definition, propertyName, prefix, cwd, typeName: propertyName });\n            }\n        }\n        if ('$defs' in def) {\n            for (const propertyName in def.$defs) {\n                const definition = def.$defs[propertyName];\n                this.visit({ def: definition, propertyName, prefix, cwd });\n            }\n        }\n        let result;\n        switch (def.type) {\n            case 'array':\n                result = this.visitArray({ arrayDef: def, propertyName, prefix, cwd, typeName });\n                break;\n            case 'boolean':\n                result = this.visitBoolean();\n                break;\n            case 'integer':\n                result = this.visitInteger();\n                break;\n            case 'number':\n                result = this.visitNumber();\n                break;\n            case 'string':\n                if ('enum' in def) {\n                    result = this.visitEnum({ enumDef: def, propertyName, prefix, cwd, typeName });\n                }\n                else {\n                    result = this.visitString({ stringDef: def, propertyName, prefix, cwd, typeName });\n                }\n                break;\n            case 'null':\n                result = this.visitNull();\n                break;\n            case 'any':\n                result = this.visitAny();\n                break;\n            default:\n                if ('name' in def || 'title' in def) {\n                    result = this.visitTypedNamedObjectDefinition({ typedNamedObjectDef: def, cwd, typeName });\n                }\n                else if ('properties' in def) {\n                    result = this.visitTypedUnnamedObjectDefinition({\n                        typedUnnamedObjectDef: def,\n                        propertyName,\n                        prefix,\n                        cwd,\n                        typeName,\n                    });\n                }\n                else if (('additionalProperties' in def && def.additionalProperties) || Object.keys(def).length === 1) {\n                    result = this.visitAny();\n                }\n                else if ('$ref' in def) {\n                    result = this.visitObjectReference({ objectRef: def, cwd, typeName });\n                }\n                else if ('enum' in def) {\n                    result = this.visitEnum({ enumDef: def, propertyName, prefix, cwd, typeName });\n                }\n        }\n        if ('oneOf' in def) {\n            result = this.visitOneOfReference({ oneOfReference: def, propertyName, prefix, cwd, typeName });\n        }\n        if (!result && !ignoreResult) {\n            console.warn(`Unknown JSON Schema definition for (${typeName || prefix}, ${propertyName})`);\n            result = this.visitAny();\n        }\n        this.cache.set(summary, result);\n        this.namedVisitedDefs.add(result);\n        return result;\n    }\n    visitArray({ arrayDef, propertyName, prefix, cwd, typeName, }) {\n        const [itemsDef] = asArray(arrayDef.items);\n        let itemTypeName = 'JSON';\n        if (itemsDef) {\n            itemTypeName = this.visit({ def: itemsDef, propertyName, prefix, cwd, typeName });\n        }\n        return `[${itemTypeName}]`;\n    }\n    visitBoolean() {\n        return 'Boolean';\n    }\n    visitInteger() {\n        return 'Int';\n    }\n    visitNumber() {\n        return 'Float';\n    }\n    visitString({ stringDef, propertyName, prefix, cwd, typeName, }) {\n        if (stringDef.pattern) {\n            let refName = `${prefix}_${propertyName}`;\n            if ('format' in stringDef) {\n                refName = stringDef.format;\n            }\n            const scalarName = typeName || this.createName({ ref: refName, cwd });\n            this.schemaComposer.add(new RegularExpression(scalarName, new RegExp(stringDef.pattern)));\n            return scalarName;\n        }\n        if (stringDef.format) {\n            switch (stringDef.format) {\n                case 'date-time':\n                    return 'DateTime';\n                case 'date':\n                    return 'Date';\n                case 'time':\n                    return 'Time';\n                case 'utc-millisec':\n                    return this.disableTimestamp ? 'String' : 'Timestamp';\n                case 'color':\n                    return 'String'; // TODO\n                case 'phone':\n                    return 'PhoneNumber';\n                case 'uri':\n                    return 'URL';\n                case 'email':\n                    return 'EmailAddress';\n                case 'ip-address':\n                    return 'IPv4';\n                case 'ipv6':\n                    return 'IPv6';\n                case 'style':\n                    return 'String'; // TODO\n            }\n        }\n        return 'String';\n    }\n    visitEnum({ enumDef, propertyName, prefix, cwd, typeName, }) {\n        let refName = `${prefix}_${propertyName}`;\n        if ('title' in enumDef) {\n            refName = enumDef.title;\n        }\n        else if ('name' in enumDef) {\n            refName = enumDef.name;\n        }\n        const name = typeName || this.createName({ ref: refName, cwd });\n        this.schemaComposer.createEnumTC({\n            name,\n            values: enumDef.enum.reduce((values, enumValue) => ({\n                ...values,\n                [this.createName({ ref: enumValue, cwd })]: {\n                    value: enumValue,\n                },\n            }), {}),\n        });\n        return name;\n    }\n    createFieldsMapFromProperties(objectDef, prefix, cwd) {\n        var _a;\n        const fieldMap = {};\n        for (const propertyName in objectDef.properties) {\n            let fieldName = propertyName;\n            if (!VALID_FIELD_NAME.test(fieldName)) {\n                fieldName = camelCase(propertyName);\n            }\n            if (/^[0-9]/.test(fieldName) || fieldName === '') {\n                fieldName = `_${fieldName}`;\n            }\n            const property = objectDef.properties[propertyName];\n            let type = this.visit({ def: property, propertyName, prefix, cwd });\n            const isRequired = 'required' in objectDef && ((_a = objectDef.required) === null || _a === void 0 ? void 0 : _a.includes(propertyName));\n            if (isRequired) {\n                type += '!';\n            }\n            fieldMap[fieldName] = {\n                type,\n                description: property.description,\n            };\n            if (!this.isInput && fieldName !== propertyName) {\n                fieldMap[fieldName].resolve = (root) => root[propertyName];\n            }\n        }\n        return fieldMap;\n    }\n    getGraphQLObjectTypeWithTypedObjectDef({ objectDef, objectIdentifier, cwd, typeName, }) {\n        const name = typeName || this.createName({ ref: objectIdentifier, cwd });\n        const fields = this.createFieldsMapFromProperties(objectDef, name, cwd);\n        if (this.isInput) {\n            this.schemaComposer.createInputTC({\n                name,\n                fields,\n                extensions: {\n                    objectDef,\n                },\n            });\n        }\n        else {\n            this.schemaComposer.createObjectTC({\n                name,\n                fields,\n                extensions: {\n                    objectDef,\n                },\n            });\n        }\n        return name;\n    }\n    visitTypedUnnamedObjectDefinition({ typedUnnamedObjectDef, propertyName, prefix, cwd, typeName, }) {\n        return this.getGraphQLObjectTypeWithTypedObjectDef({\n            objectDef: typedUnnamedObjectDef,\n            objectIdentifier: prefix + '_' + propertyName,\n            cwd,\n            typeName,\n        });\n    }\n    visitTypedNamedObjectDefinition({ typedNamedObjectDef, cwd, typeName, }) {\n        const objectIdentifier = 'name' in typedNamedObjectDef ? typedNamedObjectDef.name : typedNamedObjectDef.title;\n        return this.getGraphQLObjectTypeWithTypedObjectDef({\n            objectDef: typedNamedObjectDef,\n            objectIdentifier,\n            cwd,\n            typeName,\n        });\n    }\n    visitObjectReference({ objectRef, cwd, typeName, }) {\n        return typeName || this.createName({ ref: objectRef.$ref, cwd });\n    }\n    visitAny() {\n        return 'JSON';\n    }\n    visitNull() {\n        return 'Void';\n    }\n    visitOneOfReference({ oneOfReference, propertyName, prefix, cwd, typeName, }) {\n        let unionIdentifier = oneOfReference.title;\n        if (!unionIdentifier) {\n            unionIdentifier = prefix + '_' + propertyName;\n        }\n        const unionName = typeName || this.createName({ ref: unionIdentifier, cwd });\n        const types = oneOfReference.oneOf.map(def => this.visit({ def, propertyName, prefix, cwd }));\n        this.schemaComposer.createUnionTC({\n            name: unionName,\n            types,\n            resolveType: (root) => {\n                if (root.__typename) {\n                    return root.__typename;\n                }\n                for (const typeName of types) {\n                    const typeDef = this.schemaComposer.getAnyTC(typeName);\n                    const isValid = this.ajv.validate(typeDef.getExtension('objectDef'), root);\n                    if (isValid) {\n                        return typeName;\n                    }\n                }\n                return null;\n            },\n        });\n        return unionName;\n    }\n}\n//# sourceMappingURL=json-schema-visitor.js.map","import { JSONSchemaVisitor, getFileName } from './json-schema-visitor';\nimport urlJoin from 'url-join';\nimport { readFileOrUrlWithCache, stringInterpolator, parseInterpolationStrings, isUrl } from '@graphql-mesh/utils';\nimport AggregateError from 'aggregate-error';\nimport { fetchache, Request } from 'fetchache';\nimport { SchemaComposer } from 'graphql-compose';\nimport { pathExists, stat, writeJSON } from 'fs-extra';\nimport toJsonSchema from 'to-json-schema';\nimport { GraphQLJSON, GraphQLVoid, GraphQLDate, GraphQLDateTime, GraphQLTime, GraphQLTimestamp, GraphQLPhoneNumber, GraphQLURL, GraphQLEmailAddress, GraphQLIPv4, GraphQLIPv6, } from 'graphql-scalars';\nexport default class JsonSchemaHandler {\n    constructor({ config, cache, pubsub }) {\n        this.schemaComposer = new SchemaComposer();\n        this.config = config;\n        this.cache = cache;\n        this.pubsub = pubsub;\n    }\n    async getMeshSource() {\n        var _a, _b;\n        const schemaComposer = this.schemaComposer;\n        schemaComposer.add(GraphQLJSON);\n        schemaComposer.add(GraphQLVoid);\n        schemaComposer.add(GraphQLDateTime);\n        schemaComposer.add(GraphQLDate);\n        schemaComposer.add(GraphQLTime);\n        if (!this.config.disableTimestampScalar) {\n            schemaComposer.add(GraphQLTimestamp);\n        }\n        schemaComposer.add(GraphQLPhoneNumber);\n        schemaComposer.add(GraphQLURL);\n        schemaComposer.add(GraphQLEmailAddress);\n        schemaComposer.add(GraphQLIPv4);\n        schemaComposer.add(GraphQLIPv6);\n        const externalFileCache = new Map();\n        const inputSchemaVisitor = new JSONSchemaVisitor(schemaComposer, true, externalFileCache, this.config.disableTimestampScalar);\n        const outputSchemaVisitor = new JSONSchemaVisitor(schemaComposer, false, externalFileCache, this.config.disableTimestampScalar);\n        const contextVariables = [];\n        const typeNamedOperations = [];\n        const unnamedOperations = [];\n        if (this.config.baseSchema) {\n            const basedFilePath = this.config.baseSchema;\n            const baseSchema = await readFileOrUrlWithCache(basedFilePath, this.cache, {\n                headers: this.config.schemaHeaders,\n            });\n            externalFileCache.set(basedFilePath, baseSchema);\n            const baseFileName = getFileName(basedFilePath);\n            outputSchemaVisitor.visit({\n                def: baseSchema,\n                propertyName: 'Base',\n                prefix: baseFileName,\n                cwd: basedFilePath,\n            });\n        }\n        (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.operations) === null || _b === void 0 ? void 0 : _b.forEach(async (operationConfig) => {\n            if (operationConfig.responseTypeName) {\n                typeNamedOperations.push(operationConfig);\n            }\n            else {\n                unnamedOperations.push(operationConfig);\n            }\n        });\n        const handleOperations = async (operationConfig) => {\n            let responseTypeName = operationConfig.responseTypeName;\n            let [requestSchema, responseSchema] = await Promise.all([\n                operationConfig.requestSample &&\n                    this.generateJsonSchemaFromSample({\n                        samplePath: operationConfig.requestSample,\n                        schemaPath: operationConfig.requestSchema,\n                    }),\n                operationConfig.responseSample &&\n                    this.generateJsonSchemaFromSample({\n                        samplePath: operationConfig.responseSample,\n                        schemaPath: operationConfig.responseSchema,\n                    }),\n            ]);\n            [requestSchema, responseSchema] = await Promise.all([\n                requestSchema ||\n                    (operationConfig.requestSchema &&\n                        readFileOrUrlWithCache(operationConfig.requestSchema, this.cache, {\n                            headers: this.config.schemaHeaders,\n                        })),\n                responseSchema ||\n                    (operationConfig.responseSchema &&\n                        readFileOrUrlWithCache(operationConfig.responseSchema, this.cache, {\n                            headers: this.config.schemaHeaders,\n                        })),\n            ]);\n            operationConfig.method = operationConfig.method || (operationConfig.type === 'Mutation' ? 'POST' : 'GET');\n            operationConfig.type = operationConfig.type || (operationConfig.method === 'GET' ? 'Query' : 'Mutation');\n            const basedFilePath = operationConfig.responseSchema || operationConfig.responseSample;\n            if (basedFilePath) {\n                externalFileCache.set(basedFilePath, responseSchema);\n                const responseFileName = getFileName(basedFilePath);\n                responseTypeName = outputSchemaVisitor.visit({\n                    def: responseSchema,\n                    propertyName: 'Response',\n                    prefix: responseFileName,\n                    cwd: basedFilePath,\n                    typeName: operationConfig.responseTypeName,\n                });\n            }\n            const { args, contextVariables: specificContextVariables } = parseInterpolationStrings([\n                ...Object.values(this.config.operationHeaders || {}),\n                ...Object.values(operationConfig.headers || {}),\n                operationConfig.path,\n            ], operationConfig.argTypeMap);\n            contextVariables.push(...specificContextVariables);\n            let requestTypeName = operationConfig.requestTypeName;\n            if (requestSchema) {\n                const basedFilePath = operationConfig.requestSchema || operationConfig.requestSample;\n                externalFileCache.set(basedFilePath, requestSchema);\n                const requestFileName = getFileName(basedFilePath);\n                requestTypeName = inputSchemaVisitor.visit({\n                    def: requestSchema,\n                    propertyName: 'Request',\n                    prefix: requestFileName,\n                    cwd: basedFilePath,\n                    typeName: operationConfig.requestTypeName,\n                });\n            }\n            if (requestTypeName) {\n                args.input = {\n                    type: requestTypeName,\n                    description: requestSchema === null || requestSchema === void 0 ? void 0 : requestSchema.description,\n                };\n            }\n            const destination = operationConfig.type;\n            schemaComposer[destination].addFields({\n                [operationConfig.field]: {\n                    description: operationConfig.description || (responseSchema === null || responseSchema === void 0 ? void 0 : responseSchema.description) ||\n                        `${operationConfig.method} ${operationConfig.path}`,\n                    type: responseTypeName,\n                    args,\n                    resolve: async (root, args, context, info) => {\n                        const interpolationData = { root, args, context, info };\n                        if (operationConfig.pubsubTopic) {\n                            const pubsubTopic = stringInterpolator.parse(operationConfig.pubsubTopic, interpolationData);\n                            return this.pubsub.asyncIterator(pubsubTopic);\n                        }\n                        else if (operationConfig.path) {\n                            const interpolatedPath = stringInterpolator.parse(operationConfig.path, interpolationData);\n                            const fullPath = urlJoin(this.config.baseUrl, interpolatedPath);\n                            const method = operationConfig.method;\n                            const headers = {\n                                ...this.config.operationHeaders,\n                                ...operationConfig === null || operationConfig === void 0 ? void 0 : operationConfig.headers,\n                            };\n                            for (const headerName in headers) {\n                                headers[headerName] = stringInterpolator.parse(headers[headerName], interpolationData);\n                            }\n                            const requestInit = {\n                                method,\n                                headers,\n                            };\n                            const urlObj = new URL(fullPath);\n                            const input = args.input;\n                            if (input) {\n                                switch (method) {\n                                    case 'GET':\n                                    case 'DELETE': {\n                                        const newSearchParams = new URLSearchParams(input);\n                                        newSearchParams.forEach((value, key) => {\n                                            urlObj.searchParams.set(key, value);\n                                        });\n                                        break;\n                                    }\n                                    case 'POST':\n                                    case 'PUT': {\n                                        requestInit.body = JSON.stringify(input);\n                                        break;\n                                    }\n                                    default:\n                                        throw new Error(`Unknown method ${operationConfig.method}`);\n                                }\n                            }\n                            const request = new Request(urlObj.toString(), requestInit);\n                            const response = await fetchache(request, this.cache);\n                            const responseText = await response.text();\n                            let responseJson;\n                            try {\n                                responseJson = JSON.parse(responseText);\n                            }\n                            catch (e) {\n                                throw responseText;\n                            }\n                            if (responseJson.errors) {\n                                throw new AggregateError(responseJson.errors);\n                            }\n                            if (responseJson._errors) {\n                                throw new AggregateError(responseJson._errors);\n                            }\n                            if (responseJson.error) {\n                                throw responseJson.error;\n                            }\n                            return responseJson;\n                        }\n                    },\n                },\n            });\n        };\n        await Promise.all(typeNamedOperations.map(handleOperations));\n        await Promise.all(unnamedOperations.map(handleOperations));\n        const schema = schemaComposer.buildSchema();\n        return {\n            schema,\n            contextVariables,\n        };\n    }\n    async isGeneratedJSONSchemaValid({ samplePath, schemaPath }) {\n        if (schemaPath || (!isUrl(schemaPath) && (await pathExists(schemaPath)))) {\n            const [schemaFileStat, sampleFileStat] = await Promise.all([stat(schemaPath), stat(samplePath)]);\n            if (schemaFileStat.mtime > sampleFileStat.mtime) {\n                return true;\n            }\n        }\n        return false;\n    }\n    async getValidCachedJSONSchema(samplePath) {\n        const cachedSchema = await this.cache.get(samplePath);\n        if (cachedSchema) {\n            const sampleFileStat = await stat(samplePath);\n            if (cachedSchema.timestamp > sampleFileStat.mtime.getTime()) {\n                return cachedSchema.schema;\n            }\n            else {\n                this.cache.delete(samplePath);\n            }\n        }\n        return null;\n    }\n    async generateJsonSchemaFromSample({ samplePath, schemaPath }) {\n        if (!(await this.isGeneratedJSONSchemaValid({ samplePath, schemaPath }))) {\n            const cachedSample = await this.getValidCachedJSONSchema(samplePath);\n            if (cachedSample) {\n                return cachedSample;\n            }\n            const sample = await readFileOrUrlWithCache(samplePath, this.cache);\n            const schema = toJsonSchema(sample, {\n                required: false,\n                objects: {\n                    additionalProperties: false,\n                },\n                strings: {\n                    detectFormat: true,\n                },\n                arrays: {\n                    mode: 'first',\n                },\n            });\n            if (schemaPath) {\n                writeJSON(schemaPath, schema);\n            }\n            else {\n                const cachedSchema = {\n                    timestamp: Date.now(),\n                    schema,\n                };\n                this.cache.set(samplePath, cachedSchema);\n            }\n            return schema;\n        }\n        return null;\n    }\n}\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"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"}