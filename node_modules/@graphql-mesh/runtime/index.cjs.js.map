{"version":3,"file":"index.cjs.js","sources":["../../../dist/runtime/src/constants.js","../../../dist/runtime/src/resolvers-hooks.js","../../../dist/runtime/src/get-mesh.js"],"sourcesContent":["export const MESH_CONTEXT_SYMBOL = Symbol('isMeshContext');\nexport const MESH_API_CONTEXT_SYMBOL = Symbol('isMeshAPIContext');\n//# sourceMappingURL=constants.js.map","import { Kind, print, parse, } from 'graphql';\nimport { composeResolvers } from '@graphql-tools/resolvers-composition';\nimport { buildOperationNodeForField } from '@graphql-tools/utils';\nimport { addResolversToSchema } from '@graphql-tools/schema';\nimport { MESH_CONTEXT_SYMBOL, MESH_API_CONTEXT_SYMBOL } from './constants';\nimport { delegateToSchema } from '@graphql-tools/delegate';\nimport { extractResolvers } from '@graphql-mesh/utils';\nfunction isMeshContext(context) {\n    return !!context && typeof context === 'object' && MESH_CONTEXT_SYMBOL in context;\n}\nfunction isAPIContext(apiContext) {\n    return !!apiContext && typeof apiContext === 'object' && MESH_API_CONTEXT_SYMBOL in apiContext;\n}\nfunction createProxyInfo({ schema, parentType, field, depthLimit = 2, root, args, selectedFields, selectionSet, operationKind, info, }) {\n    const actualReturnType = 'ofType' in info.returnType ? info.returnType.ofType : info.returnType;\n    const returnType = 'ofType' in field.type ? field.type.ofType : field.type;\n    if (!selectedFields &&\n        !selectionSet &&\n        'name' in actualReturnType &&\n        'name' in returnType &&\n        actualReturnType.name === returnType.name) {\n        return {\n            ...info,\n            returnType,\n        };\n    }\n    selectionSet = selectionSet && (typeof selectionSet === 'string' ? parse(selectionSet) : parse(print(selectionSet)));\n    const operation = (selectionSet === null || selectionSet === void 0 ? void 0 : selectionSet.definitions[0]) ||\n        buildOperationNodeForField({\n            schema,\n            kind: operationKind,\n            field: field.name,\n            depthLimit,\n            argNames: Object.keys(args),\n            selectedFields,\n        });\n    return {\n        fieldName: field.name,\n        fieldNodes: operation.selectionSet.selections.filter(s => s.kind === Kind.FIELD),\n        returnType: field.type,\n        parentType,\n        schema,\n        fragments: {},\n        rootValue: root,\n        operation,\n        variableValues: args,\n        path: {\n            key: field.name,\n        },\n    };\n}\nexport function applyResolversHooksToResolvers(unifiedSchema, resolvers, pubsub) {\n    var _a;\n    // TODO: We should find another way to map schema with rawSources\n    const nameSchemaMap = new Map();\n    if ((_a = unifiedSchema.extensions) === null || _a === void 0 ? void 0 : _a.sourceMap) {\n        for (const [rawSource, schema] of unifiedSchema.extensions.sourceMap.entries()) {\n            nameSchemaMap.set(rawSource.name, schema);\n        }\n    }\n    return composeResolvers(resolvers, {\n        '*.*': originalResolver => async (root, args, context = {}, info) => {\n            const resolverData = {\n                root,\n                args,\n                context,\n                info,\n            };\n            pubsub.publish('resolverCalled', { resolverData });\n            try {\n                const proxyContext = new Proxy(context, {\n                    get(context, apiName) {\n                        if (isMeshContext(context)) {\n                            const apiContext = context[apiName];\n                            if (isAPIContext(apiContext)) {\n                                return {\n                                    ...apiContext,\n                                    api: getSdk(apiContext, nameSchemaMap, info, root, context, 'all'),\n                                    apiQuery: getSdk(apiContext, nameSchemaMap, info, root, context, 'query'),\n                                    apiMutation: getSdk(apiContext, nameSchemaMap, info, root, context, 'mutation'),\n                                    apiSubscription: getSdk(apiContext, nameSchemaMap, info, root, context, 'subscription'),\n                                };\n                            }\n                        }\n                        return context[apiName];\n                    },\n                });\n                const result = await originalResolver(root, args, proxyContext, info);\n                pubsub.publish('resolverDone', { resolverData, result });\n                return result;\n            }\n            catch (error) {\n                pubsub.publish('resolverError', { resolverData, error });\n                throw error;\n            }\n        },\n    });\n}\nfunction getSdk(apiContext, nameSchemaMap, info, root, context, focusOnRootType) {\n    return new Proxy(apiContext, {\n        get(apiContext, fieldName) {\n            const apiSchema = nameSchemaMap.get(apiContext.rawSource.name);\n            let rootTypes = { query: null, mutation: null, subscription: null };\n            switch (focusOnRootType) {\n                case 'query':\n                    rootTypes = {\n                        query: apiSchema.getQueryType(),\n                        mutation: null,\n                        subscription: null,\n                    };\n                    break;\n                case 'mutation':\n                    rootTypes = {\n                        query: null,\n                        mutation: apiSchema.getMutationType(),\n                        subscription: null,\n                    };\n                    break;\n                case 'subscription':\n                    rootTypes = {\n                        query: null,\n                        mutation: null,\n                        subscription: apiSchema.getSubscriptionType(),\n                    };\n                    break;\n                default:\n                    rootTypes = {\n                        query: apiSchema.getQueryType(),\n                        mutation: apiSchema.getMutationType(),\n                        subscription: apiSchema.getSubscriptionType(),\n                    };\n                    break;\n            }\n            let parentType;\n            let operation;\n            let field;\n            for (const operationName in rootTypes) {\n                const rootType = rootTypes[operationName];\n                if (rootType) {\n                    const fieldMap = rootType.getFields();\n                    if (fieldName in fieldMap) {\n                        operation = operationName;\n                        field = fieldMap[fieldName];\n                        parentType = rootType;\n                        // TODO: There might be collision here between the same field names in different root types\n                        // JYC Fix: collision only in 'all' mode, not in other modes\n                        if (operation === info.operation.operation) {\n                            break;\n                        }\n                    }\n                }\n            }\n            return (methodArgs = {}, { depth, fields, selectionSet } = {}) => {\n                const proxyInfo = createProxyInfo({\n                    schema: apiSchema,\n                    parentType,\n                    field,\n                    depthLimit: depth,\n                    root,\n                    args: methodArgs,\n                    selectedFields: fields,\n                    selectionSet,\n                    info,\n                    operationKind: operation,\n                });\n                return delegateToSchema({\n                    schema: apiSchema,\n                    operation,\n                    fieldName,\n                    args: methodArgs,\n                    context,\n                    info: proxyInfo,\n                });\n            };\n        },\n    });\n}\nexport function applyResolversHooksToSchema(schema, pubsub) {\n    const sourceResolvers = extractResolvers(schema);\n    return addResolversToSchema({\n        schema,\n        resolvers: applyResolversHooksToResolvers(schema, sourceResolvers, pubsub),\n        updateResolversInPlace: true,\n    });\n}\n//# sourceMappingURL=resolvers-hooks.js.map","/* eslint-disable no-unused-expressions */\nimport { execute, subscribe } from 'graphql';\nimport { applyResolversHooksToSchema } from './resolvers-hooks';\nimport { MESH_CONTEXT_SYMBOL, MESH_API_CONTEXT_SYMBOL } from './constants';\nimport { applySchemaTransforms } from '@graphql-tools/utils';\nimport { ensureDocumentNode, groupTransforms } from '@graphql-mesh/utils';\nexport async function getMesh(options) {\n    const rawSources = [];\n    const { pubsub, cache } = options;\n    await Promise.all(options.sources.map(async (apiSource) => {\n        const source = await apiSource.handler.getMeshSource();\n        let apiSchema = source.schema;\n        const apiName = apiSource.name;\n        const { wrapTransforms, noWrapTransforms } = groupTransforms(apiSource.transforms);\n        // If schema is going to be wrapped already we can use noWrapTransforms as wrapTransforms on source level\n        // The idea behind avoiding wrapping as much as possible is to decrease multiple rounds of graphqljs execution phase for performance\n        if (wrapTransforms.length === 0 && !source.executor && !source.subscriber) {\n            apiSchema = applySchemaTransforms(apiSchema, noWrapTransforms);\n        }\n        else {\n            wrapTransforms.push(...noWrapTransforms);\n        }\n        rawSources.push({\n            name: apiName,\n            contextBuilder: source.contextBuilder || null,\n            schema: apiSchema,\n            executor: source.executor,\n            subscriber: source.subscriber,\n            transforms: wrapTransforms,\n            contextVariables: source.contextVariables || [],\n            handler: apiSource.handler,\n            batch: 'batch' in source ? source.batch : true,\n        });\n    }));\n    let unifiedSchema = await options.merger({\n        rawSources,\n        cache,\n        pubsub,\n        typeDefs: options.additionalTypeDefs,\n        resolvers: options.additionalResolvers,\n        transforms: options.transforms,\n    });\n    unifiedSchema = applyResolversHooksToSchema(unifiedSchema, pubsub);\n    async function buildMeshContext(initialContextValue) {\n        const context = {\n            ...initialContextValue,\n            pubsub,\n            [MESH_CONTEXT_SYMBOL]: true,\n        };\n        await Promise.all(rawSources.map(async (rawSource) => {\n            const contextBuilder = rawSource.contextBuilder;\n            if (contextBuilder) {\n                const sourceContext = await contextBuilder(context);\n                if (sourceContext) {\n                    Object.assign(context, sourceContext);\n                }\n            }\n            Object.assign(context, {\n                [rawSource.name]: {\n                    rawSource,\n                    [MESH_API_CONTEXT_SYMBOL]: true,\n                },\n            });\n        }));\n        return context;\n    }\n    async function meshExecute(document, variables, context, rootValue) {\n        const contextValue = await buildMeshContext(context);\n        return execute({\n            document: ensureDocumentNode(document),\n            contextValue,\n            rootValue: rootValue || {},\n            variableValues: variables || {},\n            schema: unifiedSchema,\n        });\n    }\n    async function meshSubscribe(document, variables, context, rootValue) {\n        const contextValue = await buildMeshContext(context);\n        return subscribe({\n            document: ensureDocumentNode(document),\n            contextValue,\n            rootValue: rootValue || {},\n            variableValues: variables || {},\n            schema: unifiedSchema,\n        });\n    }\n    const localRequester = async (document, variables, context) => {\n        const executionResult = await meshExecute(document, variables, context);\n        if (executionResult.data && !executionResult.errors) {\n            return executionResult.data;\n        }\n        else {\n            throw new GraphQLMeshSdkError(executionResult.errors, document, variables, executionResult.data);\n        }\n    };\n    return {\n        execute: meshExecute,\n        subscribe: meshSubscribe,\n        schema: unifiedSchema,\n        contextBuilder: buildMeshContext,\n        rawSources,\n        sdkRequester: localRequester,\n        cache,\n        pubsub,\n        destroy: () => pubsub.publish('destroy', undefined),\n    };\n}\nexport class GraphQLMeshSdkError extends Error {\n    constructor(errors, document, variables, data) {\n        super(`GraphQL Mesh SDK Failed (${errors.length} errors): ${errors.map(e => e.message).join('\\n\\t')}`);\n        this.errors = errors;\n        this.document = document;\n        this.variables = variables;\n        this.data = data;\n        errors.forEach(e => console.error(e));\n    }\n}\n//# sourceMappingURL=get-mesh.js.map"],"names":["parse","print","buildOperationNodeForField","Kind","composeResolvers","delegateToSchema","schema","extractResolvers","addResolversToSchema","groupTransforms","applySchemaTransforms","execute","ensureDocumentNode","subscribe"],"mappings":"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"}