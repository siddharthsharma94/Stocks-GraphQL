import LRUCache from 'lru-cache';

// Based on https://github.com/apollographql/apollo-server/blob/master/packages/apollo-datasource-rest/src/HTTPCache.ts
class InMemoryLRUCache {
    constructor({ max = Infinity, length = (item) => (Array.isArray(item) || typeof item === 'string' ? item.length : 1), ...options } = {}) {
        this.store = new LRUCache({
            max,
            length,
            ...options,
        });
    }
    async get(key) {
        return this.store.get(key);
    }
    async set(key, value, options) {
        const maxAge = (options === null || options === void 0 ? void 0 : options.ttl) && (options === null || options === void 0 ? void 0 : options.ttl) * 1000;
        this.store.set(key, value, maxAge);
    }
    async delete(key) {
        this.store.del(key);
    }
}

export default InMemoryLRUCache;
//# sourceMappingURL=index.esm.js.map
