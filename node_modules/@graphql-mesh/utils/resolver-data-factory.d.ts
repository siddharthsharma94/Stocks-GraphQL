import { GraphQLFieldConfigArgumentMap, GraphQLInputType } from 'graphql';
import { ResolverData } from '@graphql-mesh/types';
export declare type ResolverDataBasedFactory<T> = (data: ResolverData) => T;
export declare type ArgTypeMap = {
    [argName: string]: GraphQLInputType | ArgType;
};
export declare enum ArgType {
    ID = "ID",
    String = "String",
    Boolean = "Boolean",
    Float = "Float",
    Int = "Int"
}
export declare function getInputTypeFromTypeName(typeName: GraphQLInputType | ArgType): GraphQLInputType;
export declare function parseInterpolationStrings(interpolationStrings: string[], argTypeMap?: ArgTypeMap): {
    args: GraphQLFieldConfigArgumentMap;
    contextVariables: string[];
};
export declare function getInterpolatedStringFactory(nonInterpolatedString: string): ResolverDataBasedFactory<string>;
export declare function getInterpolatedHeadersFactory(nonInterpolatedHeaders?: Record<string, string>): ResolverDataBasedFactory<Headers>;
export declare function getHeadersObject(headers: Headers): Record<string, string>;
