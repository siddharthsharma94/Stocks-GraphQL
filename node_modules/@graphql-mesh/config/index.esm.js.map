{"version":3,"file":"index.esm.js","sources":["../../../dist/config/src/utils.js","../../../dist/config/src/index.js"],"sourcesContent":["import { parse } from 'graphql';\nimport { resolve } from 'path';\nimport { printSchemaWithDirectives } from '@graphql-tools/utils';\nimport { paramCase } from 'param-case';\nimport { loadTypedefs } from '@graphql-tools/load';\nimport { GraphQLFileLoader } from '@graphql-tools/graphql-file-loader';\nimport { get, set, kebabCase } from 'lodash';\nimport { stringInterpolator } from '@graphql-mesh/utils';\nimport { mergeResolvers } from '@graphql-tools/merge';\nimport { PubSub, withFilter } from 'graphql-subscriptions';\nimport { EventEmitter } from 'events';\nexport async function getPackage(name, type, importFn) {\n    const casedName = paramCase(name);\n    const casedType = paramCase(type);\n    const possibleNames = [\n        `@graphql-mesh/${casedName}`,\n        `@graphql-mesh/${casedName}-${casedType}`,\n        `@graphql-mesh/${casedType}-${casedName}`,\n        casedName,\n        `${casedName}-${casedType}`,\n        `${casedType}-${casedName}`,\n        casedType,\n    ];\n    if (name.includes('-')) {\n        possibleNames.push(name);\n    }\n    const possibleModules = possibleNames.concat(resolve(process.cwd(), name));\n    for (const moduleName of possibleModules) {\n        try {\n            const exported = await importFn(moduleName);\n            return (exported.default || exported.parser || exported);\n        }\n        catch (err) {\n            if (err.message.indexOf(`Cannot find module '${moduleName}'`) === -1) {\n                throw new Error(`Unable to load ${type} matching ${name}: ${err.message}`);\n            }\n        }\n    }\n    throw new Error(`Unable to find ${type} matching ${name}`);\n}\nexport async function getHandler(name, importFn) {\n    const handlerFn = await getPackage(name.toString(), 'handler', importFn);\n    return handlerFn;\n}\nexport async function resolveAdditionalTypeDefs(baseDir, additionalTypeDefs) {\n    if (additionalTypeDefs) {\n        const sources = await loadTypedefs(additionalTypeDefs, {\n            cwd: baseDir,\n            loaders: [new GraphQLFileLoader()],\n        });\n        return sources.map(source => source.document || parse(source.rawSDL || printSchemaWithDirectives(source.schema)));\n    }\n    return undefined;\n}\nexport async function resolveAdditionalResolvers(baseDir, additionalResolvers, importFn, pubsub) {\n    const loadedResolvers = await Promise.all((additionalResolvers || []).map(async (additionalResolver) => {\n        if (typeof additionalResolver === 'string') {\n            const filePath = additionalResolver;\n            const exported = await importFn(resolve(baseDir, filePath));\n            let resolvers = null;\n            if (exported.default) {\n                if (exported.default.resolvers) {\n                    resolvers = exported.default.resolvers;\n                }\n                else if (typeof exported.default === 'object') {\n                    resolvers = exported.default;\n                }\n            }\n            else if (exported.resolvers) {\n                resolvers = exported.resolvers;\n            }\n            if (!resolvers) {\n                console.warn(`Unable to load resolvers from file: ${filePath}`);\n                return {};\n            }\n            return resolvers;\n        }\n        else {\n            if ('pubsubTopic' in additionalResolver) {\n                return {\n                    [additionalResolver.type]: {\n                        [additionalResolver.field]: {\n                            subscribe: withFilter((root, args, context, info) => {\n                                const resolverData = { root, args, context, info };\n                                const topic = stringInterpolator.parse(additionalResolver.pubsubTopic, resolverData);\n                                return pubsub.asyncIterator(topic);\n                            }, (root, args, context, info) => {\n                                return additionalResolver.filterBy ? eval(additionalResolver.filterBy) : true;\n                            }),\n                            resolve: (payload) => {\n                                if (additionalResolver.returnData) {\n                                    return get(payload, additionalResolver.returnData);\n                                }\n                                return payload;\n                            },\n                        },\n                    },\n                };\n            }\n            else {\n                return {\n                    [additionalResolver.type]: {\n                        [additionalResolver.field]: {\n                            selectionSet: additionalResolver.requiredSelectionSet,\n                            resolve: async (root, args, context, info) => {\n                                const resolverData = { root, args, context, info };\n                                const methodArgs = {};\n                                for (const argPath in additionalResolver.args) {\n                                    set(methodArgs, argPath, stringInterpolator.parse(additionalResolver.args[argPath], resolverData));\n                                }\n                                const result = await context[additionalResolver.targetSource].api[additionalResolver.targetMethod](methodArgs, {\n                                    selectedFields: additionalResolver.resultSelectedFields,\n                                    selectionSet: additionalResolver.resultSelectionSet,\n                                    depth: additionalResolver.resultDepth,\n                                });\n                                return additionalResolver.returnData ? get(result, additionalResolver.returnData) : result;\n                            },\n                        },\n                    },\n                };\n            }\n        }\n    }));\n    return mergeResolvers(loadedResolvers);\n}\nexport async function resolveCache(cacheConfig, importFn) {\n    if (cacheConfig) {\n        const cacheName = Object.keys(cacheConfig)[0];\n        const config = cacheConfig[cacheName];\n        const moduleName = kebabCase(cacheName.toString());\n        const pkg = await getPackage(moduleName, 'cache', importFn);\n        const Cache = pkg.default || pkg;\n        return new Cache(config);\n    }\n    const InMemoryLRUCache = await import('@graphql-mesh/cache-inmemory-lru').then(m => m.default);\n    const cache = new InMemoryLRUCache();\n    return cache;\n}\nexport async function resolvePubSub(pubsubYamlConfig, importFn) {\n    if (pubsubYamlConfig) {\n        let pubsubName;\n        let pubsubConfig;\n        if (typeof pubsubYamlConfig === 'string') {\n            pubsubName = pubsubYamlConfig;\n        }\n        else {\n            pubsubName = pubsubYamlConfig.name;\n            pubsubConfig = pubsubYamlConfig.config;\n        }\n        const moduleName = kebabCase(pubsubName.toString());\n        const pkg = await getPackage(moduleName, 'pubsub', importFn);\n        const PubSub = pkg.default || pkg;\n        return new PubSub(pubsubConfig);\n    }\n    else {\n        const eventEmitter = new EventEmitter({ captureRejections: true });\n        eventEmitter.setMaxListeners(Infinity);\n        const pubsub = new PubSub({ eventEmitter });\n        return pubsub;\n    }\n}\nexport async function resolveMerger(mergerConfig, importFn) {\n    if (mergerConfig) {\n        const pkg = await getPackage(mergerConfig, 'merger', importFn);\n        return pkg.default || pkg;\n    }\n    const StitchingMerger = await import('@graphql-mesh/merger-stitching').then(m => m.default);\n    return StitchingMerger;\n}\n//# sourceMappingURL=utils.js.map","import { cosmiconfig, defaultLoaders } from 'cosmiconfig';\nimport { getHandler, getPackage, resolveAdditionalResolvers, resolveCache, resolveMerger, resolveAdditionalTypeDefs, resolvePubSub, } from './utils';\nimport { getJsonSchema } from '@graphql-mesh/types';\nimport Ajv from 'ajv';\nexport async function parseConfig(rawConfig, options) {\n    let config;\n    const { configFormat = 'object' } = options || {};\n    switch (configFormat) {\n        case 'yaml':\n            config = defaultLoaders['.yaml']('.meshrc.yml', rawConfig);\n            break;\n        case 'json':\n            config = defaultLoaders['.json']('.meshrc.json', rawConfig);\n            break;\n        case 'object':\n            config = rawConfig;\n            break;\n    }\n    return processConfig(config, options);\n}\nexport async function processConfig(config, options) {\n    var _a, _b;\n    const { dir = process.cwd(), ignoreAdditionalResolvers = false, importFn = (moduleId) => import(moduleId) } = options || {};\n    await Promise.all(((_a = config.require) === null || _a === void 0 ? void 0 : _a.map(mod => importFn(mod))) || []);\n    const cache = await resolveCache(config.cache, importFn);\n    const pubsub = await resolvePubSub(config.pubsub, importFn);\n    const [sources, transforms, additionalTypeDefs, additionalResolvers, merger] = await Promise.all([\n        Promise.all(config.sources.map(async (source) => {\n            const handlerName = Object.keys(source.handler)[0];\n            const handlerConfig = source.handler[handlerName];\n            const [handlerLibrary, transforms] = await Promise.all([\n                getHandler(handlerName, importFn),\n                Promise.all((source.transforms || []).map(async (t) => {\n                    const transformName = Object.keys(t)[0];\n                    const transformConfig = t[transformName];\n                    const TransformCtor = await getPackage(transformName.toString(), 'transform', importFn);\n                    return new TransformCtor({\n                        apiName: source.name,\n                        config: transformConfig,\n                        cache,\n                        pubsub,\n                    });\n                })),\n            ]);\n            const HandlerCtor = handlerLibrary;\n            return {\n                name: source.name,\n                handler: new HandlerCtor({\n                    name: source.name,\n                    cache,\n                    pubsub,\n                    config: handlerConfig,\n                }),\n                transforms,\n            };\n        })),\n        Promise.all(((_b = config.transforms) === null || _b === void 0 ? void 0 : _b.map(async (t) => {\n            const transformName = Object.keys(t)[0];\n            const transformConfig = t[transformName];\n            const TransformLibrary = await getPackage(transformName.toString(), 'transform', importFn);\n            return new TransformLibrary({\n                apiName: '',\n                cache,\n                pubsub,\n                config: transformConfig,\n            });\n        })) || []),\n        resolveAdditionalTypeDefs(dir, config.additionalTypeDefs),\n        resolveAdditionalResolvers(dir, ignoreAdditionalResolvers ? [] : config.additionalResolvers || [], importFn, pubsub),\n        resolveMerger(config.merger, importFn),\n    ]);\n    return {\n        sources,\n        transforms,\n        additionalTypeDefs,\n        additionalResolvers,\n        cache,\n        merger,\n        mergerType: config.merger,\n        pubsub,\n        config,\n    };\n}\nfunction customLoader(ext) {\n    function loader(filepath, content) {\n        if (typeof process !== 'undefined' && 'env' in process) {\n            content = content.replace(/\\$\\{(.*?)\\}/g, (_, variable) => {\n                let varName = variable;\n                let defaultValue = '';\n                if (variable.includes(':')) {\n                    const spl = variable.split(':');\n                    varName = spl.shift();\n                    defaultValue = spl.join(':');\n                }\n                return process.env[varName] || defaultValue;\n            });\n        }\n        if (ext === 'json') {\n            return defaultLoaders['.json'](filepath, content);\n        }\n        if (ext === 'yaml') {\n            return defaultLoaders['.yaml'](filepath, content);\n        }\n        if (ext === 'js') {\n            return defaultLoaders['.js'](filepath, content);\n        }\n    }\n    return loader;\n}\nexport function validateConfig(config) {\n    const ajv = new Ajv({ schemaId: 'auto' });\n    // Settings for draft-04\n    const metaSchema = require('ajv/lib/refs/json-schema-draft-04.json');\n    ajv.addMetaSchema(metaSchema);\n    const isValid = ajv.validate(getJsonSchema(), config);\n    if (!isValid) {\n        console.warn(`GraphQL Mesh Configuration is not valid:\\n${ajv.errorsText()}`);\n    }\n}\nexport async function findAndParseConfig(options) {\n    const { configName = 'mesh', dir = process.cwd(), ignoreAdditionalResolvers = false } = options || {};\n    const explorer = cosmiconfig(configName, {\n        loaders: {\n            '.json': customLoader('json'),\n            '.yaml': customLoader('yaml'),\n            '.yml': customLoader('yaml'),\n            '.js': customLoader('js'),\n            noExt: customLoader('yaml'),\n        },\n    });\n    const results = await explorer.search(dir);\n    const config = results.config;\n    validateConfig(config);\n    return processConfig(config, { dir, ignoreAdditionalResolvers });\n}\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"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"}